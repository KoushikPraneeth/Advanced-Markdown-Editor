
import html2pdf from 'html2pdf.js';

export const exportToHtml = async (htmlContent: string, title: string = 'Advanced Export'): Promise<void> => {
  const fullHtml = `<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>${title}</title>
    <style>
        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            line-height: 1.6;
            color: #333;
            max-width: 800px;
            margin: 0 auto;
            padding: 2rem;
            background: #fff;
        }
        
        h1, h2, h3, h4, h5, h6 {
            color: #2d3748;
            margin-top: 2rem;
            margin-bottom: 1rem;
            font-weight: 700;
        }
        
        h1 {
            font-size: 2.5rem;
            border-bottom: 3px solid #4299e1;
            padding-bottom: 0.5rem;
        }
        
        h2 {
            font-size: 2rem;
            border-bottom: 2px solid #e2e8f0;
            padding-bottom: 0.3rem;
        }
        
        h3 { font-size: 1.5rem; }
        h4 { font-size: 1.25rem; }
        
        p {
            margin-bottom: 1rem;
            color: #4a5568;
        }
        
        code {
            background: #f7fafc;
            padding: 0.25rem 0.5rem;
            border-radius: 0.25rem;
            font-family: 'Monaco', 'Consolas', monospace;
            font-size: 0.875rem;
            border: 1px solid #e2e8f0;
        }
        
        pre {
            background: #f7fafc;
            padding: 1.5rem;
            border-radius: 0.5rem;
            overflow-x: auto;
            border: 1px solid #e2e8f0;
            margin: 1.5rem 0;
        }
        
        pre code {
            background: none;
            padding: 0;
            border: none;
        }
        
        blockquote {
            border-left: 4px solid #4299e1;
            padding-left: 1rem;
            margin: 1.5rem 0;
            font-style: italic;
            color: #718096;
        }
        
        table {
            width: 100%;
            border-collapse: collapse;
            margin: 1.5rem 0;
            box-shadow: 0 1px 3px rgba(0,0,0,0.1);
        }
        
        th, td {
            border: 1px solid #e2e8f0;
            padding: 0.75rem;
            text-align: left;
        }
        
        th {
            background: #f7fafc;
            font-weight: 600;
            color: #2d3748;
        }
        
        tr:nth-child(even) {
            background: #f9fafb;
        }
        
        a {
            color: #4299e1;
            text-decoration: none;
        }
        
        a:hover {
            text-decoration: underline;
        }
        
        ul, ol {
            margin: 1rem 0;
            padding-left: 2rem;
        }
        
        li {
            margin: 0.5rem 0;
        }
        
        hr {
            border: none;
            height: 2px;
            background: linear-gradient(to right, #4299e1, #63b3ed);
            margin: 2rem 0;
            border-radius: 1px;
        }
        
        .mermaid-container {
            text-align: center;
            margin: 2rem 0;
            padding: 1rem;
            background: #f7fafc;
            border-radius: 0.5rem;
            border: 1px solid #e2e8f0;
        }
        
        @media print {
            body { margin: 0; padding: 1rem; }
            .mermaid-container { break-inside: avoid; }
        }
    </style>
</head>
<body>
    ${htmlContent}
    <footer style="margin-top: 3rem; padding-top: 2rem; border-top: 1px solid #e2e8f0; text-align: center; color: #a0aec0; font-size: 0.875rem;">
        Generated by Advanced Markdown Editor
    </footer>
</body>
</html>`;

  await navigator.clipboard.writeText(fullHtml);
};

export const exportToPdf = async (element: HTMLElement): Promise<void> => {
  if (!element) {
    console.error("Export to PDF failed: No element provided.");
    return;
  }

  // Wait for fonts to be loaded
  await document.fonts.ready;

  const options = {
    margin: [0.5, 0.5, 0.5, 0.5],
    filename: `advanced-export-${new Date().toISOString().split('T')[0]}.pdf`,
    image: { type: 'jpeg', quality: 0.98 },
    html2canvas: {
      scale: 2,
      useCORS: true,
      letterRendering: true,
      allowTaint: true,
      dpi: 192 // Increase DPI for better font rendering
    },
    jsPDF: { 
      unit: 'in', 
      format: 'letter', 
      orientation: 'portrait' 
    }
  };

  await html2pdf().from(element).set(options).save();
};

export const downloadAsFile = (content: string, filename: string, mimeType: string): void => {
  const blob = new Blob([content], { type: mimeType });
  const url = URL.createObjectURL(blob);
  const link = document.createElement('a');
  link.href = url;
  link.download = filename;
  document.body.appendChild(link);
  link.click();
  document.body.removeChild(link);
  URL.revokeObjectURL(url);
};
